() => {
    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    function _setPrompt(txt) {
        const p = document.createElement("p")
        p.textContent = txt
        const inputArea = document.querySelector("#prompt-textarea")
        inputArea.querySelector("p").remove()
        inputArea.appendChild(p)
    }

    function _flushPrompt() {
        document.querySelector("button#composer-submit-button").click()
    }

    // Errors mostly stem from here
    function isReadyToRead() {
        msg = getLastMessage()
        const writingOrDone = !(msg.charCodeAt(0) == 8203 || msg == "\n")
        const notWriting = document.querySelector(".streaming-animation") == null
        return writingOrDone && notWriting
    }

    // errors !sometimes! stem here
    function isReadyToSend() {
        return document.querySelector("button[aria-label='Yanıtlamayı durdur']") == null
    }


    // Errors mostly stem from here
    function getLastMessage() {
        const msgs = document.querySelectorAll("article")
        const ps = msgs[msgs.length-1].querySelectorAll("p")
        let out = ""
        for (let i = 0; i < ps.length; i++) {
            out += ps[i].innerText+"\n"
        }
        return out
        
    }



    async function sendPrompt(prompt) {

        while (!isReadyToSend()) {
            await sleep(50)
        }

        await sleep(50)
        _setPrompt(prompt)
        setTimeout(_flushPrompt, 1)

    }

    async function askPrompt(prompt) {
        sendPrompt(prompt)

        await sleep(50)
        
        return new Promise(async resolve => {
            while (!isReadyToSend()) { 
                await sleep(50)
            }
            resolve(getLastMessage())   
        })
    }
    

    console.log('//##VERSION##')
    //##PYGPT##
}